# data/sucity-19.yaml
# COCO 2017 dataset http://cocodataset.org
# Train command: python train.py --data coco.yaml
# Default dataset location is next to /yolov5:
#   /parent_folder
#     /coco
#     /yolov5


# download command/URL (optional)
# download: bash data/scripts/get_coco.sh

# train and val data as 1) directory: path/images/, 2) file: path/images.txt, or 3) list: [path1/images/, path2/images/]
# train: /DATASET/SUCITY/SUCITY-DETEC/VOCdevkitszcity1_specialcar/2007_train.txt  # 118287 images
train: [/workspace/dataset/VOCdevkitszcity1_specialcar_addBaoAn_vehicle_count/VOC2007/JPEGImages/, /workspace/dataset/baoan_2d_220801_vehicle_count/VOC2007/JPEGImages/ ] # 118287 images

# val: /DATASET/SUCITY/SUCITY-DETEC/VOCdevkitszcity1_specialcar/2007_val.txt  # 5000 images
val: /workspace/dataset/baoan_jiaolian_add_futian_special_vehicle_count/VOC2007/JPEGImages/  # 5000 images

# test: /DATASET/SUCITY/SUCITY-DETEC/VOCdevkitszcity1_specialcar/2007_test.txt # 20288 of 40670 images, submit to https://competitions.codalab.org/competitions/20794
test: /workspace/dataset/baoan_jiaolian_add_futian_special_vehicle_count/VOC2007/JPEGImages/ # 20288 of 40670 images, submit to https://competitions.codalab.org/competitions/20794

# number of classes
nc: 5

# class names
names: ["Car", "Bus", "Cycle", "Pedestrian", "Truck", ]

# Print classes
# with open('data/coco.yaml') as f:
#   d = yaml.load(f, Loader=yaml.FullLoader)  # dict
#   for i, x in enumerate(d['names']):
#     print(i, x)

